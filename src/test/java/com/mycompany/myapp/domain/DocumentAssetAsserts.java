package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DocumentAssetAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentAssetAllPropertiesEquals(DocumentAsset expected, DocumentAsset actual) {
        assertDocumentAssetAutoGeneratedPropertiesEquals(expected, actual);
        assertDocumentAssetAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentAssetAllUpdatablePropertiesEquals(DocumentAsset expected, DocumentAsset actual) {
        assertDocumentAssetUpdatableFieldsEquals(expected, actual);
        assertDocumentAssetUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentAssetAutoGeneratedPropertiesEquals(DocumentAsset expected, DocumentAsset actual) {
        assertThat(expected)
            .as("Verify DocumentAsset auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentAssetUpdatableFieldsEquals(DocumentAsset expected, DocumentAsset actual) {
        assertThat(expected)
            .as("Verify DocumentAsset relevant properties")
            .satisfies(e -> assertThat(e.getFilename()).as("check filename").isEqualTo(actual.getFilename()))
            .satisfies(e -> assertThat(e.getData()).as("check data").isEqualTo(actual.getData()))
            .satisfies(e -> assertThat(e.getDataContentType()).as("check data contenty type").isEqualTo(actual.getDataContentType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentAssetUpdatableRelationshipsEquals(DocumentAsset expected, DocumentAsset actual) {}
}
